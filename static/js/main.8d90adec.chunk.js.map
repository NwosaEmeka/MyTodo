{"version":3,"sources":["utils/formatDate.js","redux/todoTypes.js","components/DisplayTodo.js","redux/actions/todoAction.js","pages/CompletedTodo.js","pages/PendingTodo.js","pages/TrashPage.js","pages/ErrorPage.js","components/TodoForm.js","pages/AddTodo.js","pages/EditTodo.js","App.js","reportWebVitals.js","redux/reducers/todoReducer.js","redux/store/storeConfig.js","redux/localStorage.js","index.js"],"names":["getDate","date","slice","getTime","ADD_TODO","DELETE_TODO","TOGGLE_TODO","RESTORE_TODO","UPDATE_TODO","REMOVE_TODO","connect","dispatch","deleteTodo","id","type","restoreTodo","toggleTodo","removeTodo","item","due_date","completed_date","props","history","useHistory","className","checkbox","onClick","edit","push","delete","window","confirm","restore","remove","state","todos","map","todo","completed","deleted","ErrorPage","style","height","display","alignItems","justifyContent","TodoForm","match","submitAction","name","key","task","find","params","useState","myform","setMyform","error","setError","handleInput","e","inputName","target","inputValue","value","previousState","onSubmit","preventDefault","trim","htmlFor","onChange","addTodo","uuidv4","updateTodo","App","activeClassName","to","exact","path","render","replace","component","PendingTodo","CompletedTodo","AddTodo","EditTodo","TrashPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","todoReducer","action","Date","toLocaleString","timeZone","hour12","filter","storeConfig","persistedState","storedTodos","localStorage","getItem","JSON","parse","err","getStateFromLS","store","createStore","subscribe","setItem","stringify","console","log","saveStateToLS","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d90adec.chunk.js","sourcesContent":["export const getDate = date => date.slice(0, 10)\r\nexport const getTime = date => date.slice(11,17)","export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const RESTORE_TODO = \"RESTORE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";","import React from 'react';\r\nimport { getDate, getTime } from '../utils/formatDate';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { toggleTodo, restoreTodo, deleteTodo, removeTodo } from \"../redux/actions/todoAction\";\r\nimport './displayTodo.css';\r\n\r\n\r\nfunction DisplayTodo({ id, item, due_date, completed_date, ...props }) {\r\n  \r\n  const history = useHistory();\r\n\r\n  return (\r\n    <li className=\"todo__card\">\r\n      <div className=\"todo__info\">\r\n        {props.checkbox ?\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"checkbox\"\r\n            onClick={() => props.toggleTodo(id)}\r\n          /> :\r\n          \"\"\r\n        }\r\n        <h2>{ item }</h2>\r\n      </div>\r\n      <div className=\"todo_dates\">\r\n        <p>Due Date: {getDate(due_date)}{\" \"}{getTime(due_date)}</p>\r\n        <p>Completed Date: {getDate(completed_date)}{\" \"}{getTime(completed_date) }</p>\r\n      </div>\r\n\r\n\r\n      <div className=\"todo__actions\">\r\n        {props.edit ?\r\n        <button className=\"todo__btn edit_btn\" onClick={() => history.push(`/edit/${id}`)}>\r\n            {props.edit}\r\n          </button>\r\n          :\"\"\r\n        }\r\n\r\n        {props.delete ?\r\n          <button className=\"todo__btn delete_btn\" onClick={() => {\r\n            if (window.confirm(\"Add to trash can?\")) {\r\n              props.deleteTodo(id)\r\n            }\r\n          }}>\r\n            {props.delete}\r\n          </button>\r\n          : \"\"\r\n        }\r\n\r\n        {props.restore ?\r\n          <button className=\"todo__btn restore_btn\" onClick={() => props.restoreTodo(id)}>\r\n            {props.restore}\r\n          </button>\r\n          : \"\"\r\n        }\r\n        {props.remove ?\r\n          <button className=\"todo__btn delete_btn\" onClick={() => {\r\n            if (window.confirm(\"Do want to delete this todo permanently?\")) {\r\n              props.removeTodo(id)\r\n            }\r\n          }}>\r\n            {props.remove}\r\n          </button>\r\n          : \"\"\r\n        }\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nconst mapDisptchToProps = dispatch => ({\r\n  deleteTodo: id => dispatch(deleteTodo(id)),\r\n  restoreTodo: id => dispatch(restoreTodo(id)),\r\n  toggleTodo: id => dispatch(toggleTodo(id)),\r\n  removeTodo: id => dispatch(removeTodo(id))\r\n});\r\nexport default connect(null, mapDisptchToProps)(DisplayTodo);\r\n","// Action creators\r\nimport {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO,\r\n  RESTORE_TODO,\r\n  UPDATE_TODO,\r\n  REMOVE_TODO\r\n} from '../todoTypes';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addTodo = (item, date) => ({\r\n  type: ADD_TODO,\r\n  id: uuidv4(),\r\n  item,\r\n  date\r\n});\r\n\r\nexport const deleteTodo = id => ({\r\n  type: DELETE_TODO,\r\n  id\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n  type: TOGGLE_TODO,\r\n  id\r\n});\r\n\r\nexport const restoreTodo = id => ({\r\n  type: RESTORE_TODO,\r\n  id\r\n});\r\n\r\nexport const removeTodo = id => ({\r\n  type: REMOVE_TODO,\r\n  id\r\n});\r\n\r\nexport const updateTodo = (item, date, id) => ({\r\n  type: UPDATE_TODO,\r\n  id,\r\n  item,\r\n  date\r\n});\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DisplayTodo from '../components/DisplayTodo';\r\n\r\nfunction CompletedTodo({ todos }) {\r\n  return (\r\n    <div>\r\n      <h1 className=\"page__header\">COMPLETED TODO</h1>\r\n      <ul className=\"todo__container\">\r\n        {todos.map(todo => {\r\n          if (todo.completed === true && todo.deleted === false) {\r\n            return <DisplayTodo\r\n              key={todo.id}\r\n              id={todo.id}\r\n              item={todo.item}\r\n              due_date={todo.due_date}\r\n              completed_date={todo.completed_date}\r\n              checkbox={true}\r\n              edit=\"Edit\"\r\n              delete=\"Delete\"\r\n            />\r\n          }\r\n          return \"\"\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  todos: state\r\n});\r\nexport default connect(mapStateToProps)(CompletedTodo);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DisplayTodo from '../components/DisplayTodo';\r\n\r\n\r\nfunction PendingTodo({todos}) {\r\n  return (\r\n    <div>\r\n      <h1 className=\"page__header\">PENDING TODO</h1>\r\n      <ul className=\"todo__container\">\r\n        {todos.map(todo => {\r\n          if (todo.completed === false && todo.deleted === false) {\r\n            return <DisplayTodo\r\n              key={todo.id}\r\n              id={todo.id}\r\n              item={todo.item}\r\n              due_date={todo.due_date}\r\n              completed_date={\"\"}\r\n              checkbox={true}\r\n              edit=\"Edit\"\r\n              delete=\"Delete\"\r\n            />\r\n          }\r\n          return \"\"\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  todos: state\r\n});\r\nexport default connect(mapStateToProps)(PendingTodo);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DisplayTodo from '../components/DisplayTodo';\r\n\r\nfunction TrashPage({ todos }) {\r\n  return (\r\n    <div>\r\n      <h1 className=\"page__header\">DELETED TODO</h1>\r\n      <ul className=\"todo__container\">\r\n        {todos.map(todo => {\r\n          if (todo.deleted === true) {\r\n            return <DisplayTodo\r\n              key={todo.id}\r\n              id={todo.id}\r\n              item={todo.item}\r\n              due_date={todo.due_date}\r\n              completed_date={todo.completed_date}\r\n              checkbox={false}\r\n              restore=\"Restore\"\r\n              remove=\"Remove\"\r\n            />\r\n          }\r\n          return \"\"\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: state\r\n});\r\nexport default connect(mapStateToProps)(TrashPage);\r\n","import React from 'react';\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <div style={{\r\n      height: \"100vh\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    }}>\r\n      <h1>Sorry, the page you are looking for does not exist</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './todoForm.css';\r\n\r\nfunction TodoForm({ match, todos, submitAction, name }) {\r\n  let key =\"\";\r\n  let task = \"\";\r\n  let date = \"\";\r\n\r\n  // If the action is to edit todo, get the id from the url and set the form\r\n  // fields to the todo items\r\n  if (name === \"UPDATE TODO\") {\r\n    const item = todos.find(todo => todo.id === match.params.id)\r\n    key = item.id;\r\n    task = item.item;\r\n    date = item.due_date;\r\n  };\r\n\r\n  const [myform, setMyform] = useState({ task: task, due_date: date });\r\n  const [error, setError] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleInput = (e) => {\r\n    let inputName = e.target.name;\r\n    let inputValue = e.target.value;\r\n\r\n    setMyform(previousState => ({\r\n      ...previousState, [inputName]: inputValue\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (myform.task.trim() === \"\" || myform.due_date.trim() === \"\") {\r\n      setError('Please fill both fields')\r\n    }\r\n    else {\r\n      submitAction(myform.task, myform.due_date, key)\r\n      setMyform({ task: \"\", due_date: \"\" }) // clean the form\r\n      history.push(\"/\") //redirect to the pending list\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"form_group\">\r\n      <form onSubmit={handleSubmit}>\r\n        {error ?\r\n          <p className=\"errMsg\">{error}</p>\r\n          :\r\n          \"\"\r\n        };\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"task\">TASK:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"task\"\r\n            className=\"input_field\"\r\n            value={myform.task}\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"due_date\">DUE DATE:</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            name=\"due_date\"\r\n            className=\"input_field\"\r\n            value={myform.due_date}\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn\" value={name} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport TodoForm from '../components/TodoForm';\r\nimport { addTodo } from \"../redux/actions/todoAction\";\r\n\r\nfunction AddTodo({ addTodo }) {\r\n  \r\n  return (\r\n    <>\r\n      <h1 className=\"page__header\">ADD TODO</h1>\r\n      <div className=\"form__container\">\r\n        <TodoForm\r\n          submitAction={addTodo}\r\n          name=\"ADD TODO\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(null, { addTodo })(AddTodo);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport TodoForm from '../components/TodoForm';\r\nimport { updateTodo } from \"../redux/actions/todoAction\";\r\n\r\nfunction EditTodo({ updateTodo, todos, match }) {\r\n  \r\n  return (\r\n    <>\r\n      <h1 className=\"page__header\">EDIT TODO</h1>\r\n      <div className=\"form__container\">\r\n        <TodoForm\r\n          submitAction={updateTodo}\r\n          name=\"UPDATE TODO\"\r\n          todos={todos}\r\n          match={match}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  todos: state\r\n});\r\nexport default connect(mapStateToProps, { updateTodo })(EditTodo);","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { NavTab } from 'react-router-tabs';\nimport './App.css';\nimport CompletedTodo from './pages/CompletedTodo';\nimport PendingTodo from './pages/PendingTodo';\nimport TrashPage from './pages/TrashPage';\nimport ErrorPage from './pages/ErrorPage';\nimport AddTodo from './pages/AddTodo';\nimport EditTodo from './pages/EditTodo';\n\nconst App = () => {\n  return (\n   <>\n      <div className=\"nav__bar\">\n        <div className=\"nav_items\">\n          <NavTab className=\"nav-tab\"activeClassName=\"active\" to=\"/pending\">Pending</NavTab>\n          <NavTab className=\"nav-tab\"activeClassName=\"active\" to=\"/completed\">Completed</NavTab>\n          <NavTab className=\"nav-tab\"activeClassName=\"active\" to=\"/add\">Add New</NavTab>\n          <NavTab className=\"nav-tab\"activeClassName=\"active\" to=\"/trash\">Trash</NavTab>\n        </div>\n        \n      </div>\n      \n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Redirect replace to=\"/pending\" />}\n          />\n          <Route path=\"/pending\" component={PendingTodo} />\n          <Route path=\"/completed\" component={CompletedTodo} />\n          <Route path=\"/add\" component={AddTodo} />\n          <Route path=\"/edit/:id\" component={EditTodo} />\n          <Route path=\"/trash\" component={TrashPage} />\n          <Route component={ErrorPage}/>\n        </Switch>      \n    </> \n );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO,\r\n  RESTORE_TODO,\r\n  UPDATE_TODO,\r\n  REMOVE_TODO\r\n} from '../todoTypes';\r\n\r\nconst todoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          item: action.item,\r\n          due_date: action.date,\r\n          completed_date: '',\r\n          completed: false,\r\n          deleted: false,\r\n        }\r\n      ];\r\n    \r\n    case TOGGLE_TODO:\r\n      return state.map(todo => todo.id === action.id ? {\r\n        ...todo,\r\n        completed: !todo.completed,\r\n        completed_date: new Date().toLocaleString('en-US', { timeZone: 'Asia/Singapore', hour12: false })\r\n      } : todo);\r\n    \r\n    case DELETE_TODO:\r\n      return state.map(todo => todo.id === action.id ? {\r\n        ...todo,\r\n        deleted: true\r\n      } : todo);\r\n    \r\n    case RESTORE_TODO:\r\n      return state.map(todo => todo.id === action.id ? {\r\n        ...todo,\r\n        deleted: false\r\n      } : todo);\r\n    \r\n    case UPDATE_TODO:\r\n      return state.map(todo => todo.id === action.id ? {\r\n        ...todo,\r\n        item: action.item,\r\n        due_date: action.date,\r\n      } : todo);\r\n    \r\n    case REMOVE_TODO:\r\n      return state.filter(todo => todo.id !== action.id);\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default todoReducer;","import { createStore } from 'redux';\r\nimport { getStateFromLS, saveStateToLS } from '../localStorage';\r\nimport todoReducer from '../reducers/todoReducer';\r\n\r\n\r\n\r\nconst storeConfig = () => {\r\n  const persistedState = getStateFromLS();\r\n\r\n  const store = createStore(todoReducer, persistedState);\r\n\r\n  // calls the subscribe method whenever there is change in the store\r\n  store.subscribe(() => {\r\n    saveStateToLS(store.getState());\r\n  })\r\n  return store;\r\n}\r\n\r\nexport default storeConfig;","export const getStateFromLS = () => {\r\n\r\n  // Get todos from the LS and use it as the initial state.\r\n  // If there is no todo or it fails to load, return undefine\r\n  // With undefined, the reducer will return what it considers as the initial state\r\n  try {\r\n    const storedTodos = localStorage.getItem('mytodo');\r\n    if (storedTodos === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(storedTodos);\r\n  }\r\n  catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveStateToLS = (state) => {\r\n  // Save the state to localsorage \r\n  try {\r\n    localStorage.setItem('mytodo', JSON.stringify(state));\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport storeConfig from './redux/store/storeConfig';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nconst store = storeConfig();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}